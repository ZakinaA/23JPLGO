security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Admin
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthentificator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

          # Routes instrument

        - { path: ^/instrument/modifier/, roles: ROLE_ADMIN }
        - { path: ^/instrument/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/instrument/ajouter/, roles: ROLE_ADMIN }

          # Routes eleve

        - { path: ^/eleve/modifier/, roles: ROLE_ADMIN }
        - { path: ^/eleve/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/eleve/ajouter/, roles: ROLE_ADMIN }

          # Routes contratPret

        - { path: ^/contratPret/modifier/, roles: ROLE_ADMIN }
        - { path: ^/contratPret/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/contratPret/ajouter/, roles: ROLE_ADMIN }

          # Routes responsable

        - { path: ^/responsable/modifier/, roles: ROLE_ADMIN }
        - { path: ^/responsable/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/responsable/ajouter/, roles: ROLE_ADMIN }

          # Routes inscription

        - { path: ^/inscription/modifier/, roles: ROLE_ADMIN }
        - { path: ^/inscription/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/inscription/ajouter/, roles: ROLE_ADMIN }

          # Routes cours

        - { path: ^/cours/modifier/, roles: ROLE_ADMIN }
        - { path: ^/cours/supprimer/, roles: ROLE_ADMIN }
        - { path: ^/cours/ajouter/, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
